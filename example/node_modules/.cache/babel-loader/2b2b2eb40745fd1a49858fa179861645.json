{"ast":null,"code":"function isStr(str) {\n  return typeof str === 'string';\n}\n\nmodule.exports = {\n  encode: function encode() {\n    var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    if (!isStr(str)) {\n      throw new Error('Please provide string to encode.');\n    }\n\n    return encodeURIComponent(str).replace(/!/g, '%21').replace(/'/g, '%27').replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/\\*/g, '%2A').replace(/%20/g, '+');\n  },\n  decode: function decode() {\n    var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    if (!isStr(str)) {\n      throw new Error('Please provide string to decode');\n    }\n\n    return decodeURIComponent(str.replace(/\\+/g, '%20'));\n  }\n};","map":{"version":3,"sources":["/Users/arjunramesan/Documents/Projects/searchbar-widget/byjus-searchbar-widget/node_modules/url-encode-decode/index.js"],"names":["isStr","str","module","exports","encode","Error","encodeURIComponent","replace","decode","decodeURIComponent"],"mappings":"AAAA,SAASA,KAAT,CAAgBC,GAAhB,EAAqB;AACnB,SAAO,OAAOA,GAAP,KAAe,QAAtB;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,MADe,oBACG;AAAA,QAAVH,GAAU,uEAAJ,EAAI;;AAChB,QAAI,CAACD,KAAK,CAACC,GAAD,CAAV,EAAiB;AACf,YAAM,IAAII,KAAJ,CAAU,kCAAV,CAAN;AACD;;AAED,WAAOC,kBAAkB,CAACL,GAAD,CAAlB,CAAwBM,OAAxB,CAAgC,IAAhC,EAAsC,KAAtC,EACJA,OADI,CACI,IADJ,EACU,KADV,EAEJA,OAFI,CAEI,KAFJ,EAEW,KAFX,EAGJA,OAHI,CAGI,KAHJ,EAGW,KAHX,EAIJA,OAJI,CAII,KAJJ,EAIW,KAJX,EAKJA,OALI,CAKI,MALJ,EAKY,GALZ,CAAP;AAMD,GAZc;AAcfC,EAAAA,MAde,oBAcG;AAAA,QAAVP,GAAU,uEAAJ,EAAI;;AAChB,QAAI,CAACD,KAAK,CAACC,GAAD,CAAV,EAAiB;AACf,YAAM,IAAII,KAAJ,CAAU,iCAAV,CAAN;AACD;;AAED,WAAOI,kBAAkB,CAAER,GAAD,CAAMM,OAAN,CAAc,KAAd,EAAqB,KAArB,CAAD,CAAzB;AACD;AApBc,CAAjB","sourcesContent":["function isStr (str) {\n  return typeof str === 'string'\n}\n\nmodule.exports = {\n  encode (str = '') {\n    if (!isStr(str)) {\n      throw new Error('Please provide string to encode.')\n    }\n\n    return encodeURIComponent(str).replace(/!/g, '%21')\n      .replace(/'/g, '%27')\n      .replace(/\\(/g, '%28')\n      .replace(/\\)/g, '%29')\n      .replace(/\\*/g, '%2A')\n      .replace(/%20/g, '+')\n  },\n\n  decode (str = '') {\n    if (!isStr(str)) {\n      throw new Error('Please provide string to decode')\n    }\n\n    return decodeURIComponent((str).replace(/\\+/g, '%20'))\n  }\n}\n"]},"metadata":{},"sourceType":"script"}