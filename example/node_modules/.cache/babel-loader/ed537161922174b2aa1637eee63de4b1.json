{"ast":null,"code":"import _slicedToArray from \"/Users/arjunramesan/Documents/Projects/searchbar-widget/byjus-searchbar-widget/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport 'better-react-mathjax';\n\nvar SearchbarComponent = function SearchbarComponent(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pageLoaded = _useState4[0],\n      setPageLoaded = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchKeyword = _useState6[0],\n      setSearchKeyword = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      suggestions = _useState8[0],\n      setSuggestions = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      history = _useState10[0],\n      setHistory = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      inputFocus = _useState12[0],\n      setInputFocus = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      openMobileCam = _useState14[0],\n      setopenMobileCam = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      openDesktopPopup = _useState16[0],\n      setOpenDesktopPopup = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      imageUploaded = _useState18[0],\n      setImageUploaded = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      focusSearchbar = _useState20[0],\n      setFocusSearchbar = _useState20[1];\n\n  useEffect(function () {\n    console.log('ehllo');\n  }, []);\n  return;\n};\n\nexport { SearchbarComponent };","map":{"version":3,"mappings":";;;;IAIaA,kBAAkB,GAAIC,SAAtBD,kBAAsBC,MAAD,EAAW;AAC3C,kBAAsBC,QAAQ,CAAC,KAAD,CAA9B;AAAA;AAAA,MAAKC,IAAL;AAAA,MAAWC,OAAX;;AACA,mBAAmCF,QAAQ,CAAC,IAAD,CAA3C;AAAA;AAAA,MAAMG,UAAN;AAAA,MAAkBC,aAAlB;;AACA,mBAAwCJ,QAAQ,CAAC,IAAD,CAAhD;AAAA;AAAA,MAAKK,aAAL;AAAA,MAAoBC,gBAApB;;AACA,mBAAoCN,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAKO,WAAL;AAAA,MAAkBC,cAAlB;;AACA,mBAA4BR,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAKS,OAAL;AAAA,MAAcC,UAAd;;AACA,oBAAkCV,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAKW,UAAL;AAAA,MAAiBC,aAAjB;;AACA,oBAAwCZ,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAKa,aAAL;AAAA,MAAoBC,gBAApB;;AACA,oBAA8Cd,QAAQ,CAAC,KAAD,CAAtD;AAAA;AAAA,MAAKe,gBAAL;AAAA,MAAuBC,mBAAvB;;AACA,oBAAwChB,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAKiB,aAAL;AAAA,MAAoBC,gBAApB;;AACA,oBAA0ClB,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAKmB,cAAL;AAAA,MAAqBC,iBAArB;;AAGAC,WAAS,CAAC,YAAI;AACZC,WAAO,CAACC,GAARD,CAAY,OAAZA;AADO,KAEP,EAFO,CAATD;AAIA;AAoFD","names":["SearchbarComponent","props","useState","open","setOpen","pageLoaded","setPageLoaded","searchKeyword","setSearchKeyword","suggestions","setSuggestions","history","setHistory","inputFocus","setInputFocus","openMobileCam","setopenMobileCam","openDesktopPopup","setOpenDesktopPopup","imageUploaded","setImageUploaded","focusSearchbar","setFocusSearchbar","useEffect","console","log"],"sources":["../src/index.js"],"sourcesContent":["import React, { useEffect, useState} from \"react\";\nimport { MathJax, MathJaxContext } from \"better-react-mathjax\";\nimport styles from './styles.module.css'\n\nexport const SearchbarComponent = (props) => {\n  var [open, setOpen] = useState(false);\n  var [ pageLoaded, setPageLoaded] = useState(true); \n  var [searchKeyword, setSearchKeyword] = useState(null);\n  var [suggestions, setSuggestions] = useState([]);\n  var [history, setHistory] = useState([]);\n  var [inputFocus, setInputFocus] = useState(false);\n  var [openMobileCam, setopenMobileCam] = useState(false);\n  var [openDesktopPopup, setOpenDesktopPopup] = useState(false);\n  var [imageUploaded, setImageUploaded] = useState(false);\n  var [focusSearchbar, setFocusSearchbar] = useState(false);\n\n\n  useEffect(()=>{\n    console.log('ehllo')\n  },[]);\n\n  return\n    <div className={styles.searchBarHolder}>\n        <div className={styles.searchBar}>\n            <div className={styles.searchbuttonHolder}>\n                <div className={styles.buttonHolder + ' myImages'}>\n                    {/* <Image className={styles.icon} onClick={() => customSearch(searchKeyword)} src={assetURL + \"/Search.png\"} width=\"44\" height=\"44\" alt=\"SearchIcon\"></Image> */}\n                    {/* <Image  onClick={() => customSearch(searchKeyword)} src={\"/question-answer/SearchIcon1.png\"} width=\"24\" height=\"24\" alt=\"SearchIcon\"></Image> */}\n                </div>\n            </div>\n            <div>\n                <input id=\"searchInput\" name=\"searchInput\" type=\"text\" placeholder={`Search for questions & chapters`}  onFocus={() => {setInputFocus(true);showHistory(5);}} onKeyPress={(e) => {enterButtonPressed(e)}} onKeyUp={(e)=>searchInput(e.target.value)} autoComplete=\"off\"></input>\n            </div>\n            <div className={styles.buttonContainer}>\n                <div className={styles.buttonHolder + ' myImages'}>\n                    { (inputFocus || suggestions.length>0 || history.length>0) && <div className={styles.crossButtonHolder}>\n                        {/* <Image className={styles.icon} onClick={() => clearSearch()} src={assetURL + \"/cancel.webp\"} width=\"14\" height=\"14\" alt=\"CrossIcon\"></Image> */}\n                    </div>\n                    }\n                </div>\n\n                <div className={ inputFocus == true ? (styles.buttonHolder + ' myImages show-in-desktop') : (styles.buttonHolder + ' myImages')}>\n                    <div className=\"show-in-mobile\">\n                        <div className={styles.cameraButtonHolder1}>\n                            {/* <Image className={styles.icon} onClick={() => cameraClick()} src={\"/question-answer/Camera.png\"} width=\"24\" height=\"24\" alt=\"CameraIcon\"></Image> */}\n                        </div>\n                    </div>\n                    <div className=\"show-in-desktop\">\n                        <div className={styles.cameraButtonHolder2}>\n                            {/* <Image className={styles.icon} onClick={() => imageSearch()} src={\"/question-answer/Camera.png\"} width=\"36\" height=\"36\" alt=\"CameraIcon\"></Image> */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            {suggestions.length>0 &&\n                <div className={styles.suggestionHolder}>\n                    {suggestions.map((el,i) =>\n                    <div key={'suggestion_' + i}>\n                    {el.href &&\n                    <a  href={el.href ? (absolutePath + '/question-answer/' + el.href + '/') : (absolutePath + '/question-answer/search/ques?id=' + el.question_id)} style={{textDecoration: 'none', color: 'unset'}}>\n                        <div className={styles.suggestionBox} onClick={() => {openQuestion(el, i);}}>\n                            <div>\n                            <MathJaxContext config={MathjaxConfig}>\n                                <MathJax>\n                                    <div dangerouslySetInnerHTML={{ __html: removeOptions(el.question_text) || ''}}></div>\n                                </MathJax>\n                            </MathJaxContext>\n                            </div>\n                            <div>\n                                {/* <Image src={assetURL + \"/SearchRecommendation.png\"} width=\"24\" height=\"24\" alt=\"search-recommendation\"></Image> */}\n                            </div>\n                        </div>\n                    </a>\n                    }\n                    </div>\n                    )}\n                </div>\n            }\n            {suggestions.length == 0 && history.length > 0 && !searchKeyword &&\n                <div className={styles.suggestionHolder}>\n                    {history.map((el,i) =>\n                      <a key={'history_' + i} href={el.href ? (absolutePath + '/question-answer/' + el.href + '/') : (absolutePath + '/question-answer/search/' + encodeURI(encode(el.searchText)))} style={{textDecoration: 'none', color: 'unset'}}>\n                        <div className={styles.historyBox} onClick={() => {openHistory(el);}}>\n                            <div className={styles.clockIcon}>\n                                {/* <Image src={assetURL + \"/SearchHistory.png\"} width=\"20\" height=\"20\" alt=\"search-history\"></Image> */}\n                            </div>\n                            <div>\n                                <MathJaxContext config={MathjaxConfig}>\n                                    <MathJax>\n                                        <div dangerouslySetInnerHTML={{ __html: removeOptions(el.searchText) || ''}}></div>\n                                    </MathJax>\n                                </MathJaxContext>\n                            </div>\n                            <div>\n                                {/* <Image src={assetURL + \"/SearchRecommendation.png\"} width=\"24\" height=\"24\" alt=\"search-recommendation\"></Image> */}\n                            </div>\n                        </div>\n                    </a>\n                    )}\n                </div>\n            }\n        </div>\n    </div>\n  \n}\n"]},"metadata":{},"sourceType":"module"}